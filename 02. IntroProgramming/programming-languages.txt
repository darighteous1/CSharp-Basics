1. Java 
Java is an object-oriented language released in 1995. Java is probably the number one programming language today. It is a well-organized language with a strong library of reusable software components. Programs written in Java can run on many different computer architectures and operating systems. Sometimes this is referred to as code portability or even WORA (write once, run anywhere).
Java Strengths: WORA, popularity
Java Weaknesses: Slower than natively compiled languages

2. C
C is a compiled, procedural language developed in 1972. Although designed to be portable in nature, C programs must be specifically compiled for computers with different architectures and operating systems. This helps make them lightning fast. Although C is a relatively old language, it is still widely used for system programming, writing other programming languages, and in embedded systems. It uses manual memory management.
Strengths: Speed
Weaknesses: Memory management can be difficult to master

3. C++
C++ is a compiled, multi-paradigm language written as an update to C in 1979. It attempts to be backwards-compatible with C and brings object-orientation, which helps in larger projects. Despite it's age, C++ is used to create a wide array of applications from games to office suites. 
Strengths: Speed
Weaknesses: C++ is older and considered more clumsy than newer object-oriented languages such as Java or C#.

4. PHP
PHP is high level interpreted programming language developed for web projects. It is widely used in Web development. Today, PHP is the most popular language used to write web applications. 
Strengths: Web programming, good documentation 
Weaknesses: Inconsistent syntax, too many ways to do the same thing, a history of bizarre security decisions

5. Python 
Python is an interpreted, multi-paradigm programming language written in the late 1980's and intended for general programming purposes. Python was not named after the snake but actually after the Monty Python comedy group. Python is characterized by its use of indentation for readability, and its encouragement for elegant code by making developers do similar things in similar ways. Python is used as the main programming choice of both Google and Ubuntu. 
Strengths: Excellent readability and overall philosophy 
Weaknesses: None

6 C# 
C# is a compiled, object-oriented language written by Microsoft. It is an open specification, but rarely seen on any non-Windows platform. C# was conceived as Microsoft's premium language in its .NET Framework. It is very similar to Java in both syntax and nature. 
Strengths: Powerful and pretty fast 
Weaknesses: Only really suitable for Windows

7. JavaScript
JavaScript is an interpreted, multi-paradigm language. A very strange one too. Despite it's name, it has nothing whatsoever to do with Java. You will rarely, if ever, see this language outside of a web browser. It is basically a language meant to script behaviors in web browsers and used for things such as web form validation and web applications. The trend in the future seems to be building more and more complex applications in JavaScript, even simple online games and office suites. The success of this trend will depend upon advancements in the speed of a browser's JavaScript interpreter. 
Strengths: it's the only reliable way to do client-side web programming 
Weaknesses: it's only really useful in a web browser

8. Perl
Perl is an interpreted, multi-paradigm language written in 1986. It is characterized by a somewhat disorganized and scary-looking syntax which only makes sense to other PERL programmers. However, a lot of veteran programmers love it and use if every day as their primary language. Its popularity has decreased over the past 10 years because a lot of newer programmers and even old Perl programmers have switched to other languages such as PHP, Python, and Ruby. Perl is perhaps still the best language for text processing and system administration scripting.
Strengths: text processing and system administration 
Weaknesses: strange syntax, and perhaps too many ways to do the same thing

9. Ruby
Ruby is an interpreted, object-oriented language written around 1995. It is one of the most object-oriented languages in the world. Everything is an object in Ruby, even letters and numbers can have method calls. It's a great language to learn if you love objects. The only negative is that it's love of object-orientation makes it a bit slow, even for an interpreted language. 
Strengths: Perhaps the world's most object-oriented language 
Weaknesses: its superior object model comes at a price... namely speed